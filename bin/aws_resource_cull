#!/usr/bin/env ruby

require 'bundler/setup'

Bundler.require(:test)

$LOAD_PATH.unshift File.join(__dir__, '..', 'lib')

require 'overseer/aws/cullers/cull_executor'
require 'overseer/aws/cullers/stackless_ec2_herder'

require 'highline/import'
require 'thor'

module Overseer
  module AWS
    #
    module Cullers
      #
      class CullRunner < Thor
        CullExecutor::SUPPORTED_RESOURCES.each do |resource|
          option :confirm, type: :boolean, default: true
          option :dry_run, type: :boolean
          desc resource, "Cull #{resource}"
          define_method(resource) do
            executor = CullExecutor.new
            executor.parse_config
            # ("stackless_ec2_delete_rule do |instance|\nage = Time.now - instance.launch_time\n(age > 60.minutes) && instance.name.match(/test/i)\nend\nstackless_ec2_delete_rule do |instance| instance.name.match(/derek/i)\nend")
            executor.cull(resource, options)
          end
        end

        option :confirm, type: :boolean, default: true
        option :dry_run, type: :boolean
        desc 'all', 'Cull all resource types'
        def all
          executor = CullExecutor.new
          executor.parse_config
          CullExecutor::SUPPORTED_RESOURCES.each do |type|
            executor.cull(type, options)
          end
        end

        no_commands do
        end
      end

      CullRunner.start(ARGV)
    end
  end
end
